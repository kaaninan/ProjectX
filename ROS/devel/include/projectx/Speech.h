// Generated by gencpp from file projectx/Speech.msg
// DO NOT EDIT!


#ifndef PROJECTX_MESSAGE_SPEECH_H
#define PROJECTX_MESSAGE_SPEECH_H

#include <ros/service_traits.h>


#include <projectx/SpeechRequest.h>
#include <projectx/SpeechResponse.h>


namespace projectx
{

struct Speech
{

typedef SpeechRequest Request;
typedef SpeechResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Speech
} // namespace projectx


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::projectx::Speech > {
  static const char* value()
  {
    return "f65bdc9e1b12d620aa41a9a84bc4cbbf";
  }

  static const char* value(const ::projectx::Speech&) { return value(); }
};

template<>
struct DataType< ::projectx::Speech > {
  static const char* value()
  {
    return "projectx/Speech";
  }

  static const char* value(const ::projectx::Speech&) { return value(); }
};


// service_traits::MD5Sum< ::projectx::SpeechRequest> should match 
// service_traits::MD5Sum< ::projectx::Speech > 
template<>
struct MD5Sum< ::projectx::SpeechRequest>
{
  static const char* value()
  {
    return MD5Sum< ::projectx::Speech >::value();
  }
  static const char* value(const ::projectx::SpeechRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::projectx::SpeechRequest> should match 
// service_traits::DataType< ::projectx::Speech > 
template<>
struct DataType< ::projectx::SpeechRequest>
{
  static const char* value()
  {
    return DataType< ::projectx::Speech >::value();
  }
  static const char* value(const ::projectx::SpeechRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::projectx::SpeechResponse> should match 
// service_traits::MD5Sum< ::projectx::Speech > 
template<>
struct MD5Sum< ::projectx::SpeechResponse>
{
  static const char* value()
  {
    return MD5Sum< ::projectx::Speech >::value();
  }
  static const char* value(const ::projectx::SpeechResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::projectx::SpeechResponse> should match 
// service_traits::DataType< ::projectx::Speech > 
template<>
struct DataType< ::projectx::SpeechResponse>
{
  static const char* value()
  {
    return DataType< ::projectx::Speech >::value();
  }
  static const char* value(const ::projectx::SpeechResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PROJECTX_MESSAGE_SPEECH_H
