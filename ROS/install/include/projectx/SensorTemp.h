// Generated by gencpp from file projectx/SensorTemp.msg
// DO NOT EDIT!


#ifndef PROJECTX_MESSAGE_SENSORTEMP_H
#define PROJECTX_MESSAGE_SENSORTEMP_H

#include <ros/service_traits.h>


#include <projectx/SensorTempRequest.h>
#include <projectx/SensorTempResponse.h>


namespace projectx
{

struct SensorTemp
{

typedef SensorTempRequest Request;
typedef SensorTempResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SensorTemp
} // namespace projectx


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::projectx::SensorTemp > {
  static const char* value()
  {
    return "813b115f2598f32dc74cb170a02d630f";
  }

  static const char* value(const ::projectx::SensorTemp&) { return value(); }
};

template<>
struct DataType< ::projectx::SensorTemp > {
  static const char* value()
  {
    return "projectx/SensorTemp";
  }

  static const char* value(const ::projectx::SensorTemp&) { return value(); }
};


// service_traits::MD5Sum< ::projectx::SensorTempRequest> should match 
// service_traits::MD5Sum< ::projectx::SensorTemp > 
template<>
struct MD5Sum< ::projectx::SensorTempRequest>
{
  static const char* value()
  {
    return MD5Sum< ::projectx::SensorTemp >::value();
  }
  static const char* value(const ::projectx::SensorTempRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::projectx::SensorTempRequest> should match 
// service_traits::DataType< ::projectx::SensorTemp > 
template<>
struct DataType< ::projectx::SensorTempRequest>
{
  static const char* value()
  {
    return DataType< ::projectx::SensorTemp >::value();
  }
  static const char* value(const ::projectx::SensorTempRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::projectx::SensorTempResponse> should match 
// service_traits::MD5Sum< ::projectx::SensorTemp > 
template<>
struct MD5Sum< ::projectx::SensorTempResponse>
{
  static const char* value()
  {
    return MD5Sum< ::projectx::SensorTemp >::value();
  }
  static const char* value(const ::projectx::SensorTempResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::projectx::SensorTempResponse> should match 
// service_traits::DataType< ::projectx::SensorTemp > 
template<>
struct DataType< ::projectx::SensorTempResponse>
{
  static const char* value()
  {
    return DataType< ::projectx::SensorTemp >::value();
  }
  static const char* value(const ::projectx::SensorTempResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PROJECTX_MESSAGE_SENSORTEMP_H
